.grid {
	// this uses the grid property which hasn't been released yet (2/11/16) but will support it when it comes out
	// if you want to test it, enable 'Experimental Web Platform features' in chrome://flags or equiv in other browsers
	display: grid;
	grid-template-columns: repeat(5, 1fr);
	grid-template-rows: repeat(2, auto);
	grid-gap: 30px 30px;
	grid-auto-columns: 1fr;
	grid-auto-columns: auto;

	@include clearfix;

	@include breakpoint(tablet) {
		grid-template-columns: repeat(4, 1fr);
		grid-template-rows: repeat(3, auto);
		grid-gap: 25px 25px;
	}

	@include breakpoint(small-tablet) {
		grid-template-columns: repeat(3, 1fr);
		grid-template-rows: repeat(4, auto);
		grid-gap: 20px 20px;
	}

	@include breakpoint(phone) {
		grid-template-columns: repeat(2, 1fr);
		grid-template-rows: repeat(5, auto);
		grid-gap: 15px 15px;
	}

	@include breakpoint(small-phone) {
		grid-template-columns: repeat(1, 1fr);
		grid-template-rows: repeat(7, auto);
		grid-gap: 10px 10px;
	}

	& > div {
		position: relative;
		display: inline-block;
		float: left;
		padding: 0 2%;
		height: 150px; // will be overiden by JS
		width: 14.4%; // grid-template-rows
		margin-right: 2%; // grid gap
		margin-bottom: 20px;

		background-color: $primary;
		background-size: 50%;
		background-position: 25% 25%;
		cursor: pointer;
		@include single-transition(all, 0.15s, ease-out, 0s);

		&:hover {
			@include animation(bounce 0.8s ease-out);
		}
		&:active {
			@include scale(0.9,0.9);
		}

		&:nth-of-type(3n+4), &:nth-of-type(5n+12) {
			margin-right: 0;
		}
		&:nth-of-type(3n+10) {
			margin-right: 2%;
		}

		@include breakpoint(tablet) { // 4 columns
			padding: 0 2%;
			width: 19.88%;
			margin-right: 1.5% !important;
			margin-bottom: 14px;

			&:nth-of-type(2n+3), &:nth-of-type(4n+9) { // compensating for larger first one
				margin-right: 0 !important;
			}
			&:nth-of-type(4n+7) { // adding the margin back on to the later ones
				margin-right: 1.5% !important;
			}
		}

		@include breakpoint(small-tablet) { // 3 columns
			padding: 0 1.5%;
			width: 29.33%;
			margin-right: 1.5% !important;
			margin-bottom: 15px;

			&:nth-of-type(2n+3), &:nth-of-type(4n+9) { // reset previous one
				margin-right: 1.5% !important;
			}

			&:nth-of-type(2), &:nth-of-type(3), &:nth-of-type(3n+6) { // compensating for larger first one
				margin-right: 0 !important;
			}
		}

		@include breakpoint(phone) { // 2 columns
			padding: 20px 1%;
			width: 47.5%;
			margin-right: 1% !important;
			margin-bottom: 12px;

			&:nth-of-type(2), &:nth-of-type(3), &:nth-of-type(3n+6) { // reset previous one
				margin-right: 1% !important;
			}

			&:nth-of-type(2n+1) {
				margin-right: 0 !important;
			}
		}

		@include breakpoint(small-phone) { // 1 column
			padding: 20px 1%;
			width: 98%;
			margin-right: 0;
			margin-bottom: 10px;
		}

		a {
			position: absolute;
			margin: 0;
			bottom: 20px;
			letter-spacing: 1px;
			color: $white;
			
			&:hover {
				text-decoration: none;
			}
		}

		&.gridgood { // when the grid property is supported
			width: auto !important;
			padding: 20px !important;
			margin: 0 !important;
			float: none !important;
		}


		&:nth-of-type(1) { // new call (larger)
			grid-column: 1 / span 2;
			grid-row: 1 / span 2;

			&.gridgood { // when the grid property is supported
				height: auto; // to span both rows
			}

			width: 34.8%;
			background-image: url(../img/icons/call.png);

			@include breakpoint(tablet) {
				width: 45.2%;
			}

			@include breakpoint(small-tablet) {
				width: 63.16%;
			}

			@include breakpoint(phone) {
				width: 98%;
			}

			@include breakpoint(small-phone) {
				grid-column: 1 / span 1;
				grid-row: 1 / span 1;
			}

			a {
				font-size: $font-size-h2;
			}
		}

		&:nth-of-type(2) { // problems
			background-color: $red;
			background-image: url(../img/icons/problems.png);
		}

		&:nth-of-type(3) { // solved
			background-color: $green;
			background-image: url(../img/icons/solved.png);
		}

		&:nth-of-type(4) { // specialist
			background-color: $purple;
			background-image: url(../img/icons/specialists.png);
		}

		&:nth-of-type(5) { // soft
			background-color: $accent;
			background-image: url(../img/icons/software.png);
		}

		&:nth-of-type(6) { // hard
			background-color: $accent;
			background-image: url(../img/icons/hardware.png);
		}

		&:nth-of-type(7) { // settings
			background-color: $black;
			background-image: url(../img/icons/settings.png);
		}
	}
}

@include keyframes(bounce) {
	0%   {background-position: 25% 25%;}
	30%  {background-position: 25% 10%;}
	50%  {background-position: 25% 25%;}
	70%  {background-position: 25% 18%;}
	80%  {background-position: 25% 25%;}
	90%  {background-position: 25% 21%;}
	100% {background-position: 25% 25%;}
}